/*
 * filegenerator
 * 
 * The following class generates a file called input.txt with the following arguments
 * a. Arrival time
 * b. Volume Duration
 * c. Volume Request Size
 * d. Potential SLA/QoS category of the request
 * 
 * The Arrival time is generated by a Poisson distribution with mean 10
 * The departure time is generated by a Poisson distribution with mean 5
 * The Volume Request size is constant
 * SLA is not used in this version
 * 
 * All rights reserved - Ioannis Papapanagiotou, Pudue University
 */

package simulator;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Random;


public class LoadGenerator {

	public static int lines = 1500000;
	
	 public static void main(String[] args) {
		 
		 Random rnd = new Random();
		 ArrayList<Integer> sizeList = new ArrayList<Integer>();
		 ArrayList<Integer> durationList = new ArrayList<Integer>();
//		 
//		 for (int i = 0; i < 7; i++) {
//			 sizeList.add((i + 1) * 100000);
//		 }
		 
//		 for (int i = 100; i <= 1000; i=i+100) {
//			 sizeList.add(i * 1000);
//		 }
		 sizeList.add(100000);
		 sizeList.add(500000);
		 sizeList.add(1000000);
		 
		 durationList.add(7200);
		 durationList.add(14400);
		 durationList.add(14400);
		 durationList.add(21600);
		 
		 try {
	        BufferedWriter out = new BufferedWriter(new FileWriter("input.txt"));
	        int arrivalTime = 0; 
	        int volumeDuration = 0;
	        int volumeSize = 0;  //MB
	        short sla = 0;
	        
	        for (int i = 1; i <= lines; i++) {
	        	arrivalTime += getPoissonRandom(0.33333);
	        	//volumeDuration = getPoissonRandom(100000);
	        	volumeDuration = durationList.get(rnd.nextInt(durationList.size()));
	        	//volumeDuration = 3600;
	        	//volumeSize = getPoissonRandom(50) * 10000;   //500GB
	        	volumeSize = sizeList.get(rnd.nextInt(sizeList.size()));
	        	//volumeDuration = (int)(rnd.nextGaussian() * 10) * 10 + 600;
	        	//volumeSize = (int)(rnd.nextGaussian() * 2) * 50000 + 500000;
	        	
	        	out.write(i + " " + arrivalTime + " " + volumeDuration + " " + volumeSize + " " + sla);        	
	            out.newLine();
	            out.flush();
	        }
	        out.close();
	        System.out.println("Generated File created (located at workspace/input.txt)");
	     } catch (IOException e) {}
	}
	 
	 private static int getPoissonRandom(double mean) {
		 Random r = new Random();
		 double L = Math.exp(-mean);
		 int k = 0;
		 double p = 1.0;
		 do {
			 p = p * r.nextDouble();
			 k++;
		 } while (p > L);
		 return k - 1;
	 }
}
